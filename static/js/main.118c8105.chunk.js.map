{"version":3,"sources":["components/Window.js","components/Terminal.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Terminal","children","style","title","center","noHover","useState","isVisible","setIsVisible","showIcon","hideIcon","className","onMouseEnter","onMouseMove","onMouseLeave","onMouseOut","color","size","messages","input","setInput","lines","setLines","scrollRef","useRef","inputRef","submit","message","l","displayLine","useCallback","messageIndex","length","cursor","trim","interval","setInterval","clearInterval","setTimeout","i","current","focus","flexRow","parseLink","text","test","matches","exec","href","useEffect","scrollTop","scrollHeight","ref","map","key","onKeyDown","e","stopPropagation","onChange","currentTarget","value","Nav","scrolled","setScrolled","top","setTop","handleUpdate","scrollY","window","addEventListener","removeEventListener","textColorClass","backgroundColorClass","App","name","img","repo","fullName","description","p","src","alt","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.118c8105.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Maximize2, X, Minus } from \"react-feather\";\n\nexport default function Terminal({\n  children,\n  style = {},\n  title = \"\",\n  center = false,\n  noHover = false,\n}) {\n  // const [isFullscreen, setIsFullscreen] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n\n  // function makeFullscreen() {\n  //   setIsFullscreen(!isFullscreen);\n  // }\n\n  // function hideFullScreen() {\n  //   setIsFullscreen(false);\n  // }\n  // const fs = isFullscreen ? \"fullscreen\" : \"\";\n\n  function showIcon() {\n    setIsVisible(true);\n  }\n\n  function hideIcon() {\n    setIsVisible(false);\n  }\n  return (\n    <div className={`app-chrome ${noHover ? \"no-hover\" : \"\"}`} style={style}>\n      <div className={`flex flex-row items-center justify-between app-bar pa2`}>\n        <div\n          className={`flex flex-row items-center`}\n          onMouseEnter={showIcon}\n          onMouseMove={showIcon}\n          onMouseLeave={hideIcon}\n          onMouseOut={hideIcon}\n        >\n          <div className=\"traffic-light red flex justify-center items-center\">\n            <X color={isVisible ? \"#222\" : \"#00000000\"} size={10} />\n          </div>\n          <div className=\"traffic-light yellow flex justify-center items-center\">\n            <Minus color={isVisible ? \"#222\" : \"#00000000\"} size={10} />\n          </div>\n          <div className=\"traffic-light green flex justify-center items-center\">\n            <Maximize2 color={isVisible ? \"#222\" : \"#00000000\"} size={10} />\n          </div>\n        </div>\n        <div className=\"theme-blue window-title\">{title}</div>\n        {center && (\n          <div className={`flex flex-row items-center vb-hidden`}>\n            <div className=\"traffic-light red\" />\n            <div className=\"traffic-light yellow\" />\n            <div className=\"traffic-light green\" />\n          </div>\n        )}\n      </div>\n\n      {children}\n    </div>\n  );\n}\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\n\nexport default function Terminal({ messages = [] }) {\n  const [input, setInput] = useState(\"\");\n  const [lines, setLines] = useState([]);\n\n  const base = \" $\";\n\n  const scrollRef = useRef();\n  const inputRef = useRef();\n\n  function submit(message) {\n    setLines((l) => [...l, message]);\n    setInput(\"\");\n  }\n\n  const displayLine = useCallback(\n    (messageIndex = 0) => {\n      // if there are no more messages to print return\n      if (messageIndex === messages.length) {\n        inputRef.current.focus();\n        return;\n      }\n\n      let cursor = 0;\n      const message = messages[messageIndex];\n\n      if (message.trim().length === \"\") {\n        submit(message);\n      }\n\n      // print one character per 50ms to look like typing\n      const interval = setInterval(() => {\n        // if we're at the end of the message, stop the interval and press enter\n        if (cursor === message.length) {\n          clearInterval(interval);\n          submit(message);\n          setTimeout(() => {\n            displayLine(messageIndex + 1);\n          }, 1000);\n          return;\n        }\n\n        // update input as if we were typing in the input\n        setInput((i) => i + message[cursor]);\n        cursor += 1;\n      }, 40);\n    },\n    [messages]\n  );\n\n  const flexRow = \"flex flex-row align-center\";\n\n  function handleKeyPress(e) {\n    if (e.key === \"Enter\") {\n      e.stopPropagation();\n      submit(input);\n    }\n  }\n\n  function handleEntry(e) {\n    setInput(e.currentTarget.value);\n  }\n\n  useEffect(() => {\n    // kick off entering text\n    displayLine(0);\n  }, [displayLine]);\n\n  // scroll to bottom on add line\n  useEffect(() => {\n    scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n  }, [lines]);\n\n  function parseLink(text) {\n    if (!/\\[(.+)\\]\\((.+)\\)/.test(text)) {\n      return text;\n    }\n\n    const matches = /(.*)\\[(.+)\\]\\((.+)\\)(.*)/.exec(text);\n\n    return (\n      <span>\n        {matches[1]}\n        <a className=\"app-text input blue\" href={matches[3]}>\n          {matches[2]}\n        </a>\n        {matches[4]}\n      </span>\n    );\n  }\n  return (\n    <div className=\"app-body\" ref={scrollRef}>\n      {lines &&\n        lines.map((l, i) => (\n          <div key={l + i} className={`${flexRow} mb2`}>\n            <div className=\"app-text b theme-blue mr2\">{base}</div>\n            <div className=\"app-text\">{parseLink(l)}</div>\n          </div>\n        ))}\n      <div className={flexRow}>\n        <div className=\"app-text b theme-blue mr2\">{base}</div>\n        <textarea\n          className=\"app-text input\"\n          onKeyDown={handleKeyPress}\n          onChange={handleEntry}\n          value={parseLink(input)}\n          ref={inputRef}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { GitHub, Linkedin, Terminal } from \"react-feather\";\n\nexport default function Nav() {\n  const [scrolled, setScrolled] = useState(false);\n  const [top, setTop] = useState(0);\n\n  const handleUpdate = useCallback(() => {\n    // console.log({ e, top });\n    const { scrollY } = window;\n    if (top !== scrollY) {\n      setScrolled(scrollY > 30);\n      setTop(scrollY);\n    }\n  }, [top]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleUpdate);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleUpdate);\n    };\n  }, [handleUpdate]);\n\n  const textColorClass = scrolled ? \"white\" : \"dark-gray\";\n\n  const backgroundColorClass = !scrolled ? \"\" : \"bg-dark-gray\";\n\n  return (\n    <nav\n      className={`w-100 fixed flex justify-between items-center ${backgroundColorClass}`}\n    >\n      <div className=\"flex justify-between items-center\">\n        <a\n          className=\"link white-70 hover-white no-underline flex items-center pa3\"\n          href=\"https://linkedin.com/in/actuallydan\"\n        >\n          <Terminal className={textColorClass} />\n          <title>linkedin.com/in/actuallydan</title>\n        </a>\n\n        <a\n          className={`link dim ${\n            scrolled ? \"white\" : \"near-black\"\n          } b f6 f5-ns dib mr3`}\n          href=\"https://github.com/actuallydan\"\n          title=\"Home\"\n        >\n          Dan Kral\n        </a>\n\n        <a\n          className={`link dim ${textColorClass} f6 f5-ns dn dib-ns`}\n          href=\"mailto:dankral01@gmail.com\"\n          title=\"dankral01@gmail.com\"\n        >\n          Contact\n        </a>\n      </div>\n      <div className=\"flex justify-between items-center\">\n        <a\n          className=\"link hover-white no-underline flex items-center pa3\"\n          href=\"https://github.com/actuallydan\"\n          title=\"actuallydan\"\n        >\n          <GitHub className={textColorClass} />\n        </a>\n        <a\n          className=\"link hover-white no-underline flex items-center pa3\"\n          href=\"https://www.linkedin.com/in/actuallydan/\"\n          title=\"linkedin.com/in/actuallydan\"\n        >\n          <Linkedin className={textColorClass} />\n        </a>\n      </div>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport Window from \"./components/Window\";\nimport Terminal from \"./components/Terminal\";\nimport Nav from \"./components/Nav\";\nimport { GitHub } from \"react-feather\";\n\nfunction App() {\n  const welcomeMessages = [\n    \"Hi there! My name is Dan.\",\n    \"I'm a fullstack web developer who loves React.js\",\n    \"I care too much about cross-platform applications and building a decentralized future\",\n    \"but for now I'm just obsessed with Javascript.\",\n    \"I've built software for a parking company,\",\n    \"a gas station chain,\",\n    \"a pharmaceutical technology company,\",\n    \"my university,\",\n    \"private individuals,\",\n    \"and now I'm teaching others in my free-time at [Trilogy Education Services](https://www.trilogyed.com/).\",\n    \" \",\n    \"I'm also on the hunt for a new full-time career move,\",\n    \"feel free to checkout [my portfolio](https://actuallydan.github.io),\",\n    \"or send me an email at dankral01@gmail.com!\",\n    \" \",\n    \"🔭 I’m currently building [athar.es](https://github.com/atharesinc/athares)\",\n    \"💬 Ask me about React, GraphQL, economics, and completely hypothetical governments\",\n    // `👯 I’m looking to collaborate on: your next project?`,\n    \"📫 How to reach me: dankral01@gmail.com\",\n    \"😄 Pronouns: he/him/his\",\n  ];\n\n  const projects = [\n    {\n      name: \"athar.es\",\n      href: \"https://www.athar.es\",\n      img: \"./images/athares-1.png\",\n      repo: \"https://github.com/atharesinc/athares\",\n      fullName: \"Athares\",\n      description:\n        \"Athares is a Distributed Democracy Platform where users can form groups with Chat and Governance without a group admin.\",\n    },\n    {\n      name: \"tadu.herokuapp.com\",\n      href: \"https://tadu.herokuapp.com\",\n      img: \"./images/tadu-2.png\",\n      fullName: \"Tadu\",\n      repo: \"https://github.com/actuallydan/tadu\",\n      description:\n        \"Tadu is a task organizer that uses Machine Learning to help you schedule tasks when you're likely to complete them.\",\n    },\n    {\n      name: \"bradysgolfcarts.com\",\n      href: \"https://bradysgolfcarts.com\",\n      img: \"./images/brady-carts.png\",\n      fullName: \"Scott Brady's Used Golf Carts\",\n      description:\n        \"Client work for the owner of a full-service golf cart repair and service company.\",\n    },\n    {\n      name: \"natureatlas.org\",\n      href: \"https://natureatlas.org/plants/earth/\",\n      img: \"./images/nature-atlas-2.png\",\n      fullName: \"Nature Atlas\",\n      description:\n        \"Led by Millersville University's Dr. Chris Hardy, I helped migrate Nature Atlas to AWS and integrate image upload to their bio-statistic research app, as well as integrate a live-poll tracker for observations made in the field.\",\n    },\n  ];\n\n  return (\n    <>\n      <Nav />\n      <div className=\"App\">\n        <Window title={\"hello.txt\"} center noHover>\n          <Terminal messages={welcomeMessages} />\n        </Window>\n\n        <div className=\"w-100 center mt4\">\n          <section className=\"flex flex-wrap\">\n            {projects.map((p) => (\n              <div key={p.name} className=\" w-100 w-50-ns pa2-ns\">\n                <div className=\"pv2\">\n                  <a href={p.href} className=\"ph2 ph0-ns pb3 link db\">\n                    <Window key={p.name} title={p.name}>\n                      <img src={p.img} alt={\"screenshot of \" + p.name} />\n                    </Window>\n                  </a>\n                  <div className=\"flex items-center\">\n                    {p.repo && (\n                      <a\n                        className=\"link hover-white no-underline mr2\"\n                        href={p.repo}\n                        title={p.repo}\n                      >\n                        <GitHub\n                          className={\"link near-black hover-white\"}\n                          size={18}\n                        />\n                      </a>\n                    )}\n                    <h3 className=\"f5 f4-ns near-black\">{p.fullName}</h3>\n                  </div>\n                  <h3 className=\"f6 f5 fw4 mt1 near-black\">{p.description}</h3>\n                </div>\n              </div>\n            ))}\n          </section>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"tachyons\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}